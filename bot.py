import os
import datetime
from telegram import Update
from telegram.ext import Application, CommandHandler, ContextTypes

# üîë –¢–æ–∫–µ–Ω –±–æ—Ç–∞ (–∑–∞–¥–∞—ë—Ç—Å—è –≤ Railway ‚Üí Variables)
TOKEN = os.getenv("TOKEN")

# üìå ID —Å–µ–º–µ–π–Ω–æ–≥–æ —á–∞—Ç–∞ (—É–∑–Ω–∞–µ–º —á–µ—Ä–µ–∑ /getchatid)
FAMILY_CHAT_ID = os.getenv("FAMILY_CHAT_ID")

if FAMILY_CHAT_ID:
    FAMILY_CHAT_ID = int(FAMILY_CHAT_ID)

# –•—Ä–∞–Ω–∏–ª–∏—â–µ –±—Ä–æ–Ω–µ–π (–≤ –ø–∞–º—è—Ç–∏)
bookings = {
    "–≤–∞–Ω–Ω–∞—è": [],
    "—Ç—É–∞–ª–µ—Ç": []
}

# /start ‚Äî —Ç–æ–ª—å–∫–æ –≤ –ª–∏—á–∫–µ
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.chat.type != "private":
        return
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø –±–æ—Ç-–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–Ω–∏—è üö™\n"
        "–ö–æ–º–∞–Ω–¥—ã (–ø–∏—à–∏ –¢–û–õ–¨–ö–û –∑–¥–µ—Å—å, –≤ –ª–∏—á–∫–µ):\n"
        "/book <–∫–æ–º–Ω–∞—Ç–∞> <HH:MM> <–º–∏–Ω—É—Ç—ã>\n"
        "/list ‚Äî –ø–æ–∫–∞–∑–∞—Ç—å –≤—Å–µ –±—Ä–æ–Ω–∏\n"
        "/getchatid ‚Äî —É–∑–Ω–∞—Ç—å ID —á–∞—Ç–∞ (—Ç–æ–ª—å–∫–æ –≤ –≥—Ä—É–ø–ø–µ)"
    )

# /book ‚Äî –±—Ä–æ–Ω—å
async def book(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.chat.type != "private":
        return

    try:
        user = update.effective_user.first_name
        room = context.args[0].lower()
        time_str = context.args[1]
        duration = int(context.args[2])

        if room not in bookings:
            await update.message.reply_text("–¢–∞–∫–æ–π –∫–æ–º–Ω–∞—Ç—ã –Ω–µ—Ç üòÖ (–µ—Å—Ç—å: –≤–∞–Ω–Ω–∞—è, —Ç—É–∞–ª–µ—Ç)")
            return

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ä–µ–º–µ–Ω–∏
        start_time = datetime.datetime.strptime(time_str, "%H:%M")
        end_time = start_time + datetime.timedelta(minutes=duration)

        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–µ—Ä–µ—Å–µ—á–µ–Ω–∏–π
        for booking in bookings[room]:
            if not (end_time <= booking["start"] or start_time >= booking["end"]):
                await update.message.reply_text("‚õî –≠—Ç–æ –≤—Ä–µ–º—è —É–∂–µ –∑–∞–Ω—è—Ç–æ!")
                return

        # –î–æ–±–∞–≤–ª—è–µ–º –±—Ä–æ–Ω—å
        bookings[room].append({"user": user, "start": start_time, "end": end_time})

        # –ü–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏–µ –≤ –ª–∏—á–∫–µ
        await update.message.reply_text(
            f"‚úÖ –¢—ã –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–ª {room} –Ω–∞ {time_str} ({duration} –º–∏–Ω.)"
        )

        # –£–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ —Å–µ–º–µ–π–Ω—ã–π —á–∞—Ç
        if FAMILY_CHAT_ID:
            text = (
                f"‚úÖ {user} –∑–∞–±—Ä–æ–Ω–∏—Ä–æ–≤–∞–ª {room} üö™\n"
                f"–í—Ä–µ–º—è: {time_str}\n"
                f"–î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {duration} –º–∏–Ω—É—Ç"
            )
            await context.bot.send_message(chat_id=FAMILY_CHAT_ID, text=text)

    except Exception:
        await update.message.reply_text("–ò—Å–ø–æ–ª—å–∑—É–π —Ç–∞–∫: /book <–∫–æ–º–Ω–∞—Ç–∞> <HH:MM> <–º–∏–Ω—É—Ç—ã>")

# /list ‚Äî —Å–ø–∏—Å–æ–∫ –±—Ä–æ–Ω–µ–π
async def list_bookings(update: Update, context: ContextTypes.DEFAULT_TYPE):
    if update.message.chat.type != "private":
        return

    text = "üìã –°–ø–∏—Å–æ–∫ –±—Ä–æ–Ω–µ–π:\n"
    for room, room_bookings in bookings.items():
        text += f"\n{room.capitalize()}:\n"
        if room_bookings:
            for b in room_bookings:
                text += f"- {b['user']} {b['start'].strftime('%H:%M')}‚Äì{b['end'].strftime('%H:%M')}\n"
        else:
            text += "–ø—É—Å—Ç–æ\n"
    await update.message.reply_text(text)

# /getchatid ‚Äî —á—Ç–æ–±—ã —É–∑–Ω–∞—Ç—å ID –≥—Ä—É–ø–ø—ã
async def getchatid(update: Update, context: ContextTypes.DEFAULT_TYPE):
    chat_id = update.message.chat_id
    await update.message.reply_text(f"ID —ç—Ç–æ–≥–æ —á–∞—Ç–∞: {chat_id}")

# –ó–∞–ø—É—Å–∫ –±–æ—Ç–∞
def main():
    app = Application.builder().token(TOKEN).build()

    app.add_handler(CommandHandler("start", start))
    app.add_handler(CommandHandler("book", book))
    app.add_handler(CommandHandler("list", list_bookings))
    app.add_handler(CommandHandler("getchatid", getchatid))

    print("–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω!")
    app.run_polling()

if _name_ == "_main_":
¬†¬†¬†¬†main()
